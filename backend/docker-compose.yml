version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis
    expose:
      - 6379
    networks:
      - backend-network

  dominate:
    build:
      context: .
      dockerfile: DockerFile
    command: "npm start"
    image: dominatebackend
    depends_on:
      - redis
      - mongodb
      - minio
    ports:
      - "9010:9010"
    networks:
      - backend-network
    deploy:
      replicas: 2

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    volumes:
      - /data/dominatedatabase:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: dominateAdmin
      MONGO_INITDB_ROOT_PASSWORD: YpEtGvP45x
    networks:
      - backend-network

  minio:
    image: bitnami/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - backend-network

  loadbalancer:
    build:
      context: ./nginx
      dockerfile: DockerFile
    image: dominatebackendlb
    ports:
      - '80:80'
      - '443:443'
    links:
      - dominate
    volumes:
      - /var/dominate/dist/dominate-frontend/:/usr/share/nginx/html
    networks:
      - backend-network

  schedular:
    image: dominatebackendschedular
    build:
      context: ./schedular
      dockerfile: DockerFile  
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge