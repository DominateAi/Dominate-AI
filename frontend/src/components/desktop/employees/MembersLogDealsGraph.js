import React, { useEffect, useState } from "react";
import { Doughnut } from "react-chartjs-2";
import { useSelector } from "react-redux";
import isEmpty from "../../../store/validations/is-empty";

export default function MembersLogDealsGraph() {
  const [labelArray, setlabelArray] = useState([]);
  const [chartData, setchartData] = useState([]);

  const revenueByMembersCount = useSelector(
    (state) => state.workspaceActivity.revenueByMembersCount
  );

  const revenueByMembersChart = useSelector(
    (state) => state.workspaceActivity.revenueByMembersChart
  );

  useEffect(() => {
    if (!isEmpty(revenueByMembersCount)) {
      // console.log(revenueByMembersCount);
      let array = [];
      revenueByMembersCount.forEach((element) => {
        array.push({
          labels: element.dealname,
          conts: element.revenue,
        });
      });
      setlabelArray(array);
    } else {
      setlabelArray([]);
    }
  }, [revenueByMembersCount]);

  useEffect(() => {
    if (!isEmpty(revenueByMembersChart)) {
      setchartData(revenueByMembersChart);
    } else {
      setchartData([]);
    }
  }, [revenueByMembersChart]);

  const options = {
    legend: {
      display: false,
      position: "right",
    },
    elements: {
      arc: {
        borderWidth: 0,
      },
    },
  };

  let allChartData = chartData;
  let label = [];
  let value = [];
  // console.log(allChartData);
  if (!isEmpty(allChartData)) {
    allChartData.forEach((ele) => {
      label.push(ele.name);
      value.push(ele.percent);
    });
  }

  const data = (canvas) => {
    const ctx = canvas.getContext("2d");
    const gradient1 = ctx.createLinearGradient(0, 0, 0, 900);
    gradient1.addColorStop(0, "#48C6EF");
    gradient1.addColorStop(0.3, "#6F86D6");

    const gradient2 = ctx.createLinearGradient(0, 0, 0, 900);
    gradient2.addColorStop(0, "#16D9E3");
    gradient2.addColorStop(0.3, "#30C7EC");
    gradient2.addColorStop(0.8, "#46AEF7");

    const gradient3 = ctx.createLinearGradient(0, 0, 0, 900);
    gradient3.addColorStop(0, "#B490CA");
    gradient3.addColorStop(0.2, "#5EE7DF");

    const gradient4 = ctx.createLinearGradient(0, 0, 0, 900);
    gradient4.addColorStop(0, "#8EC5FC");
    gradient4.addColorStop(0.3, "#E0C3FC");

    return {
      labels: !isEmpty(label) ? label : [],
      datasets: [
        {
          data: !isEmpty(value) ? value : [],
          backgroundColor: [gradient1, gradient2, gradient3, gradient4],
          borderColor: "#fff",
          borderWidth: "0.5px",
          hoverBorderColor: "transparent",
        },
      ],
    };
  };

  return (
    <div className="member-log-communication-graph-div member-log-communication-graph-div--deals">
      <div className="row mx-0 align-items-center">
        <img
          src={require("../../../assets/img/icons/purple-gradient-circle-icon.svg")}
          alt=" "
          className="member-orange-gradient-circle-img"
        />
        <h3 className="member-log-communication-graph-title">
          Revenue Generated by Member per deal
        </h3>
      </div>
      {!isEmpty(revenueByMembersChart) ? (
        <>
          <div className="row pt-40 mx-0 flex-nowrap align-items-center">
            <div className="member-log-communication-graph-block">
              <Doughnut
                data={data}
                options={options}
                width={100}
                height={100}
              />
            </div>
            <div className="member-log-communication-deals-label-div">
              {labelArray.map((data, index) => (
                <div
                  className="row mx-0 align-items-center mb-18 member-log-communication-labels-row-div"
                  key={index}
                >
                  <h5 className="chart-label-text chart-label-text--deals">
                    {data.labels}
                  </h5>
                  <div className="chart-count-div">
                    <span>{data.conts}</span>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </>
      ) : (
        <div className="text-center">
          <img
            // src={require("../../../assets/img/illustrations/member-log-filter-data.svg")}
            src="/img/desktop-dark-ui/illustrations/member-log-filter-data.svg"
            alt=""
            className="member-log-filter-data-img"
          />
          <p className="font-16-medium color-white-79 mb-30">
            No Revenue Recorded yet
          </p>
        </div>
      )}
    </div>
  );
}
